package com.run.manage.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.run.manage.comm.entity.Pager;
import com.run.manage.dao.SalesmanUserManagementDao;
import com.run.manage.model.EUserStatusEnum;
import com.run.manage.model.TDept;
import com.run.manage.model.TRole;
import com.run.manage.model.TUser;
import com.run.manage.service.SalesmanUserManagementService;
/**
 * <p>Description: [后台管理--业务人员用户管理Service接口实现类]</p>
 * @author fenghao
 *Created on 2018年10月15日
 *Copyright (c) 2018 BJRUN
 */
@Service
public class SalesmanUserManagementServiceImpl implements SalesmanUserManagementService {

	@Autowired
	private SalesmanUserManagementDao salesmanUserManagementDao;

	/**
	 * 获得后台管理-业务人员管理-用户管理列表数据
	 */
	@Override
	public JSONObject getAllUserList(int currentPage,int pageSize) {
		//查询用户信息列表包含用户所属角色信息
		Pager page = new Pager(currentPage,pageSize);
		List<TUser> userList = salesmanUserManagementDao.getAllUserList(page);
		
		JSONArray array = new JSONArray();//存储JSON对象
		for(TUser tUser:userList){
			//查询用户所属部门
			TDept dept = salesmanUserManagementDao.getDeptInfoByDeptId(tUser.getDeptID());
			tUser.setDept(dept);
			//查询用户拥有角色
			List<TRole> roleList = salesmanUserManagementDao.getRoleByUserId(tUser.getId());
			tUser.setRoles(roleList);
			
			
			JSONObject obj = new JSONObject();
			obj.put("id", tUser.getId());
			obj.put("col1", tUser.getAccount());
			obj.put("col2", tUser.getUserName());
			obj.put("col3",dept.getDeptName() );
			obj.put("col4", tUser.getRoleStr());
			obj.put("col5", tUser.getStatus());
			
			array.add(obj);
		}
		
		//查询业务人员总数
		long total = salesmanUserManagementDao.getAllUserCount();
		
		//将数据转换为前端需要的JSON格式，参照/json/admin_usermanageGrid.json
		
		JSONObject jsonObj = new JSONObject();
		jsonObj.put("total", total);
		jsonObj.put("data", array);
		
		return jsonObj;
	}

	/**
	 * 修改用户状态
	 */
	@Transactional(transactionManager="transactionManager")
	@Override
	public void updateUserStatus(TUser tUser) {
		salesmanUserManagementDao.updateUserStatus(tUser);
		
	}

	/**
	 * 获得用户状态列表,
	 * @return json/admin_usermanage.json格式数据
	 */
	@Override
	public JSONObject getAllStatusList() {
		//从枚举中获取用户状态数据
		EUserStatusEnum[] values = EUserStatusEnum.values();
		JSONObject jsonObject = new JSONObject();
		JSONArray array = new JSONArray();
		
		JSONObject o = new JSONObject();
		o.put("chkVal",-1);
		o.put("chkDisplay", "全部");
		array.add(o);
		
		for(EUserStatusEnum eUserStatusEnum:values){
			JSONObject obj = new JSONObject();
			obj.put("chkVal", eUserStatusEnum.getId());
			obj.put("chkDisplay", eUserStatusEnum.getStatusName());
			
			array.add(obj);
		}
		
		jsonObject.put("result",array);
		
		return jsonObject;
	}

	/**
	 * 获得角色列表
	 * @return json/admin_usermanage.json格式数据
	 */
	@Override
	public JSONObject getAllRoleList() {
		List<TRole> rolesList = salesmanUserManagementDao.getAllRoleList();
		
		JSONObject jsonObject = new JSONObject();
		JSONArray array = new JSONArray();
		
		JSONObject o = new JSONObject();
		o.put("chkVal",-1);
		o.put("chkDisplay", "全部");
		array.add(o);
		
		if(rolesList!=null && rolesList.size()>0){
			for(TRole tRole:rolesList){
				JSONObject obj = new JSONObject();
				obj.put("chkVal", tRole.getId());
				obj.put("chkDisplay",tRole.getRoleName());
				
				array.add(obj);
			}
		}
		
		jsonObject.put("result",array);
		return jsonObject;
	}

	/**获得部门列表
	 * @return json/admin_usermanage.json格式数据
	 */
	@Override
	public JSONObject getAllDeptList() {
	List<TDept>deptsList = salesmanUserManagementDao.getAllDeptList();
		
		JSONObject jsonObject = new JSONObject();
		JSONArray array = new JSONArray();
		
		JSONObject o = new JSONObject();
		o.put("chkVal",-1);
		o.put("chkDisplay", "全部");
		array.add(o);
		
		if(deptsList!=null && deptsList.size()>0){
			for(TDept tDept:deptsList){
				JSONObject obj = new JSONObject();
				obj.put("chkVal", tDept.getId());
				obj.put("chkDisplay",tDept.getDeptName());
				
				array.add(obj);
			}
		}
		
		jsonObject.put("result",array);
		return jsonObject;
	}
	
}
